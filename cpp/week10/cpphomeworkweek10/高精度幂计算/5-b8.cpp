/* 2254298 信11 范潇 */
#include<iostream>
#include<iomanip>
using namespace std;
int main()
{
	int power[112][130] = { {5} }, i, j, lastdigit = 1, output[130] = { 0 },temp;
	char binary[113000];//防止输入超出数组大小

	for (i = 1; i < 112; i++) {
		int remainder = 0;
		for (j = 0; j < 130; j++) {
			power[i][j] = (power[i - 1][j] + remainder) / 2;
			remainder = ((power[i - 1][j] + remainder) % 2) * 10;
			if (power[i - 1][j + 1] == 0 && remainder == 0 && j > lastdigit) {
				lastdigit = j;
				break;
			}
		}
	}
	cout << "-----------------------------------------------------------------------------------------------------------------------------------" << endl;
	cout << "----------- 上标尺  1         2         3         4         5         6         7         8         9         A         B         C" << endl;
	cout << "-----------123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" << endl;
	cout << "-----------------------------------------------------------------------------------------------------------------------------------" << endl;
	for (i = 0; i < 112; i++) {
		cout << "2^" << setw(4) << -i - 1 << " : 0.";
		for (j = 0; j < i + 1; j++) {
			cout << power[i][j];
		}
		cout << endl;
	}
	cout << "-----------------------------------------------------------------------------------------------------------------------------------" << endl;
	cout << "-----------123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" << endl;
	cout << "----------- 下标尺  1         2         3         4         5         6         7         8         9         A         B         C" << endl;
	cout << "-----------------------------------------------------------------------------------------------------------------------------------" << endl;
	cout << endl;
	cout << "请输入一个二进制纯小数，小数点开头，小数点后不超过112位(例：.101101)" << endl;
	while (1) {
	bool input = true;
		for (i = 0; i < 113000; i++)
			binary[i] = '0';
		cin >> binary;
		for (i = 1; i < 113; i++)
			if (binary[i] != '0' && binary[i] != '1'&&binary[i]!=0) 
				input = false;
		if (input && binary[0] == '.' && !cin.rdstate())
			break;
		cin.clear();
		cin.ignore(10000000, '\n');//删了这个以后会死循环
		if (binary[0] != '.')
			cout << "不是以.开头，请重输" << endl;
		else
			cout << "输入的不是0/1，请重输" << endl;

	}
	cout << endl;
	cout << "-----------------------------------------------------------------------------------------------------------------------------------" << endl;
	cout << "----------- 上标尺  1         2         3         4         5         6         7         8         9         A         B         C" << endl;
	cout << "-----------123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" << endl;
	cout << "-----------------------------------------------------------------------------------------------------------------------------------" << endl;
	cout << "输入数据 : ";
	for (i = 1; i < 113; i++) {
	 temp = 0;
		cout << binary[i];
		for (int j = i + 1; j < 113000; j++)
			if (binary[j] == '1')
				temp++;
		if (!temp) 
			break;
	}
	cout << endl;

	for (i = 1; i < 113; i++)
		if (binary[i] == '1')
			for (j = 0; j < 130; j++)
				output[j] += power[i - 1][j];
	for (i = 129; i >= 0; i--) {
		temp = output[i] / 10;
		output[i] = output[i] % 10;
		if(i>=1)
		output[i - 1] += temp;
	}
	cout << "计算值 : 0.";
	for (i = 0; i < 112; i++) {
		temp = 0;
		cout << output[i];
		for (int j = i + 1; j < 130; j++)
			if (output[j] != 0)
				temp++;
		if (!temp)
			break;
	}
	cout << endl;
	cout << "-----------------------------------------------------------------------------------------------------------------------------------" << endl;
	cout << "-----------123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" << endl;
	cout << "----------- 下标尺  1         2         3         4         5         6         7         8         9         A         B         C" << endl;
	cout << "-----------------------------------------------------------------------------------------------------------------------------------" << endl;


	return 0;
}